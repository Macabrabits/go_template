name: Docker Image CI

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
  pull_request_target:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:

    runs-on: ubuntu-latest    

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.3

      - name: Test with Go
        run: go test -timeout 30s -json > TestResults.json github.com/macabrabits/go_template/services -cover ./... || true
      - name: Vulnerability test
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...
      - name: Upload Go test results
        uses: actions/upload-artifact@v4
        with:
          name: Go-results
          path: TestResults.json

  # build_test:
  #   permissions:
  #     checks: write
  #     pull-requests: write
  #     contents: write
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Build unit test image
  #       id: build-and-push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: "{{defaultContext}}"
  #         push: false
  #         target: test
  #         tags: devops-test-cov:latest
  #         # cache-from: type=gha
  #         # cache-to: type=gha,mode=max

  #     - uses: actions/checkout@v4 #fix empty github.workspace     

  #     - name: test
  #       working-directory: ${{ github.workspace }}
  #       run: |
  #         docker run -v ${PWD}/coverage:/app/coverage  devops-test-cov:latest
  #         echo ${{ secrets.USERPWD }} | sudo chown runner:docker coverage coverage/*
      
  #     - name: Archive code coverage results
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: code-coverage-report
  #         path: ${{ github.workspace }}/coverage

  #     - uses: ArtiomTr/jest-coverage-report-action@v2
      
  #       with:
  #         skip-step: all
  #         coverage-file: ${{ github.workspace }}/coverage/report.json
  #         base-coverage-file: ${{ github.workspace }}/coverage/report.json
          
  # build_and_push:
  #   needs: build_test
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}

  #   # Extract metadata (tags, labels) for Docker
  #   # https://github.com/docker/metadata-action
  #   - name: Extract Docker metadata
  #     id: meta
  #     uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
  #     with:
  #       images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}    

  #   - name: Build and push Docker image
  #     id: build-and-push
  #     uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
  #     with:
  #       context: "{{defaultContext}}"
  #       push: ${{ github.event_name != 'pull_request' }}
  #       target: production
  #       tags: macabrabits/devops-test:${{github.run_number}}
  #       labels: ${{ steps.meta.outputs.labels }}
  #       # cache-from: type=gha
  #       # cache-to: type=gha,mode=max

  # release:
  #   permissions:      
  #     contents: write
  #   needs: build_and_push
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - uses: actions/download-artifact@v4
  #     with:
  #       name: code-coverage-report
  #       path: coverage

  #   - name: Gzip reports
  #     working-directory: ${{ github.workspace }}
  #     run: |
  #       tar -zcvf release.tar.gz coverage
        
  #   - name: Release
  #     uses: softprops/action-gh-release@v2
  #     if: startsWith(github.ref, 'refs/tags/')
  #     with:
  #       files: release.tar.gz
  #       token: ${{ secrets.GITHUB_TOKEN }}

  # delivery:    
  #   needs: build_and_push
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: update image tag
  #     run: |
  #       sed -i 's/tag: \"[0-9a-z]*\"$/tag: \"${{github.run_number}}\"/g' ${{ github.workspace }}/helm/nttdata_test/values.yaml        
  #       cat ${{ github.workspace }}/helm/nttdata_test/values.yaml

  #   - name: commit
  #     run: |
  #       git config --local user.email "action@github.com"
  #       git config --local user.name "Deploy Action"
  #       git commit -am "update image tag"
    
  #   - name: push
  #     uses: ad-m/github-push-action@master
  #     with:
  #       github_token: ${{ secrets.GITHUB_TOKEN }}
  #       branch: ${{ github.ref }}
  
              
